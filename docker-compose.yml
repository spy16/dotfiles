version: '3.2'

services:
  aerospike:
    image: aerospike:ee-6.3.0.4_1
    ports:
      - "3000:3000"
    volumes:
      - type: "bind"
        source: "./volumes/aerospike/data"
        target: "/opt/aerospike/data"
      - type: "bind"
        source: "./volumes/aerospike/configs"
        target: "/opt/aerospike/etc"

  otelcol:
    image: otel/opentelemetry-collector-contrib
    ports:
      - "1888:1888"
      - "8888:8888"
      - "8889:8889"
      - "13133:13133"
      - "4317:4317"
      - "55679:55679"
    volumes:
      - type: "bind"
        source: "./volumes/otelcol/"
        target: "/etc/otelcol-contrib/"

  mongo:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - type: "bind"
        source: "./volumes/mongo"
        target: "/etc/mongo"

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  mysql:
    image: "mysql"
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: admin
    volumes:
      - type: "bind"
        source: "./volumes/mysql"
        target: "/var/lib/mysql"

  pg15:
    image: "ankane/pgvector"
    ports:
      - "5432:5432"
    volumes:
      - type: "bind"
        source: "./volumes/pg15"
        target: "/var/lib/postgresql/data"
         
  pg14:
    image: "postgres:14-alpine"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - type: "bind"
        source: "./volumes/pg14"
        target: "/var/lib/postgresql/data"
  pg10:
    image: "postgres:10.5-alpine"
    ports:
      - "5432:5432"
    volumes:
      - type: "bind"
        source: "./volumes/pg10"
        target: "/var/lib/postgresql/data"

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
  
  rabbitmq:
    image: "rabbitmq:3.8.12-management-alpine"
    ports:
    - "15672:15672"
    - "5672:5672"
    - "15692:15692"

  zookeeper:
    image: confluentinc/cp-zookeeper:5.0.0 
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:5.0.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

